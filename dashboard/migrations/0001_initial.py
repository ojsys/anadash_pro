# Generated by Django 5.1.4 on 2025-02-09 13:46

import dashboard.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.CharField(max_length=255)),
                ('sync_type', models.CharField(choices=[('pull', 'Pull from ODK'), ('push', 'Push to ODK')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('partial', 'Partial Success'), ('failed', 'Failed')], max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('errors', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=255)),
                ('title_full', models.TextField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('training_event', 'Training Event'), ('sensitization_event', 'Sensitization Event'), ('digital_event', 'Digital Event')], max_length=20)),
                ('format', models.CharField(choices=[('paper', 'Paper'), ('digital', 'Digital'), ('hybrid', 'Hybrid')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('venue', models.CharField(max_length=255)),
                ('topics', models.TextField(blank=True)),
                ('use_case', models.CharField(blank=True, max_length=50)),
                ('remarks', models.TextField(blank=True)),
                ('odk_id', models.CharField(max_length=50, unique=True)),
                ('odk_uuid', models.CharField(max_length=50, unique=True)),
                ('submission_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=100)),
                ('odk_file_id', models.CharField(max_length=50)),
                ('download_url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='dashboard.event')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hasc1', models.CharField(max_length=10)),
                ('hasc1_name', models.CharField(max_length=255)),
                ('hasc2', models.CharField(max_length=10)),
                ('hasc2_name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'unique_together': {('hasc1', 'hasc2', 'city')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.location'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('surname', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('own_phone', models.BooleanField(default=False)),
                ('has_whatsapp', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('odk_id', models.CharField(max_length=50)),
                ('submission_time', models.DateTimeField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.event')),
            ],
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_area', models.DecimalField(decimal_places=2, max_digits=10)),
                ('area_unit', models.CharField(choices=[('hectare', 'Hectare'), ('acre', 'Acre')], max_length=20)),
                ('crops', dashboard.models.ListField(blank=True)),
                ('other_crops', models.TextField(blank=True)),
                ('consent_given_for', dashboard.models.ListField(blank=True)),
                ('registration_source', models.CharField(max_length=50)),
                ('registration_date', models.DateField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.location')),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.participant')),
            ],
        ),
        migrations.CreateModel(
            name='ExtensionAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=255)),
                ('education_level', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('tertiary', 'Tertiary')], max_length=50)),
                ('organization', models.CharField(max_length=255)),
                ('organization_type', models.CharField(max_length=50)),
                ('operational_level', models.CharField(max_length=20)),
                ('number_of_farmers', models.IntegerField(default=0)),
                ('states', dashboard.models.ListField(blank=True)),
                ('akilimo_tools', dashboard.models.ListField(blank=True)),
                ('akilimo_formats', dashboard.models.ListField(blank=True)),
                ('akilimo_use_cases', dashboard.models.ListField(blank=True)),
                ('crops', dashboard.models.ListField(blank=True)),
                ('technologies', dashboard.models.ListField(blank=True)),
                ('is_akilimo_certified', models.BooleanField(default=False)),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('api_key', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=2)),
                ('last_sync', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('users', models.ManyToManyField(related_name='partners', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.partner'),
        ),
        migrations.CreateModel(
            name='DataSyncStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_type', models.CharField(max_length=50)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.partner')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ScalingChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField()),
                ('main_business', models.CharField(max_length=50)),
                ('core_business', models.CharField(max_length=50)),
                ('target_groups', dashboard.models.ListField(blank=True)),
                ('main_target_group', models.CharField(max_length=50)),
                ('knows_akilimo', models.BooleanField(default=False)),
                ('akilimo_relevant', models.BooleanField(default=False)),
                ('use_cases', dashboard.models.ListField(blank=True)),
                ('integration_type', models.CharField(max_length=50)),
                ('has_mel_system', models.BooleanField(default=False)),
                ('system_type', models.CharField(blank=True, max_length=50)),
                ('collects_data', models.BooleanField(default=False)),
                ('has_farmer_database', models.BooleanField(default=False)),
                ('has_agrodealer_database', models.BooleanField(default=False)),
                ('odk_id', models.CharField(max_length=50, unique=True)),
                ('odk_uuid', models.CharField(max_length=50, unique=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.partner')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_type', models.CharField(max_length=50)),
                ('male_count', models.IntegerField(default=0)),
                ('female_count', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant_groups', to='dashboard.event')),
            ],
            options={
                'unique_together': {('event', 'participant_type')},
            },
        ),
    ]
